version: 2
jobs:
  generate_cache:
    machine: true
    steps:
      - checkout
      - restore_cache:
          key: docker-{{ checksum ".circleci/config.yml" }}-{{ checksum "docker-compose.yml" }}-{{ checksum "front/Dockerfile" }}
          paths: ~/caches/images.tar
      - run:
          name: Check cache file, if not exists then pull images and generate cache.
          command: |
            if [ ! -f ~/caches/images.tar ]; then
              docker-compose -f docker-compose.yml pull
              docker-compose -f docker-compose.yml build
              mkdir -p ~/caches
              docker save $(docker images | awk 'NR>=2 && ! /^<none>/{print $1}') -o ~/caches/images.tar
            fi
      - save_cache:
          key: docker-{{ checksum ".circleci/config.yml" }}-{{ checksum "docker-compose.yml" }}-{{ checksum "front/Dockerfile" }}
          paths: ~/caches/images.tar
      - run:
          name: finish cacheing
          command: echo "finish cache"

  build:
    machine: true
    steps:
      - checkout
      - restore_cache:
          key: docker-{{ checksum ".circleci/config.yml" }}-{{ checksum "docker-compose.yml" }}-{{ checksum "front/Dockerfile" }}
          paths: ~/caches/images.tar
      - run: 
          name: docker load
          command: if test -d ~/caches; then docker load -i ~/caches/images.tar; fi
      - run:
          name: Build Docker Image
          command: docker-compose -f docker-compose.yml build
      - run:
            name: docker-compose up
            command: |
                 docker-compose -f docker-compose.yml up -d
      - run:
            name: finish build
            command: echo "finish build"

  push-image:
    machine: true
    steps:
      - checkout
      - restore_cache:
          key: docker-{{ checksum ".circleci/config.yml" }}-{{ checksum "docker-compose.yml" }}-{{ checksum "front/Dockerfile" }}
          paths: ~/caches/images.tar
      - run: 
          name: docker load
          command: if test -d ~/caches; then docker load -i ~/caches/images.tar; fi
      - run: 
          name: build image 
          command: |
            docker build -f front/Dockerfile --rm=false -t imneko/bustimer:latest .
      - run: 
          name: push image
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push imneko/bustimer:latest


  deploy:
    docker: 
      - image: circleci/node:9.9.0
    steps:
      - checkout 
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - run:
          name: install now
          comamnd: 'sudo npm install -g now'
      - run:
          name: deploy
          command: |
            now -t ${ZEIT_TOKEN}
            now --prod


workflows:
  version: 2
  build-and-deploy:
    jobs:
      - generate_cache
      - build:
          requires:
            - generate_cache
      - push-image:
          filters:
            branches:
              only: master
          requires:
            - build
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - push-image
